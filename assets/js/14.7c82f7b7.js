(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{543:function(s,a,n){"use strict";n.r(a);var e=n(2),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"函数是对象方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数是对象方法"}},[s._v("#")]),s._v(" "),n("strong",[s._v("函数是对象方法")])]),s._v(" "),n("p",[s._v("在 JavaScript 中，函数是对象的方法，")]),s._v(" "),n("p",[s._v("如果一个函数不是 JavaScript 对象的方法，那么它就是全局对象的函数。")]),s._v(" "),n("p",[s._v("就是在JS中，函数肯定是一个对象中的元素（方法）， 但是这个对象是谁就看你的定义了，如果不是你定义的对象中的方法，那么这个对象就是全局对象。")]),s._v(" "),n("p",[n("strong",[s._v("举个例子：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let person = {\n  firstName: 'Diana',\n  lastName: 'Yako',\n  fullName: function() {\n  \treturn this.firstName + lastName;\n  }\n} // 这个fullName是一个方法，person对象是这个方法的拥有者，这个fullName方法属于person对象\nfunction fullName2() {\n  return person.firstName + person.lastName;\n} // 这个fullName2也是一个方法，但是他不属于person对象，属于全局对象的方法\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"javascript-call-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-call-方法"}},[s._v("#")]),s._v(" "),n("strong",[s._v("JavaScript Call()方法")])]),s._v(" "),n("p",[s._v("使用 call() 方法，您可以编写能够在不同对象上使用的方法。")]),s._v(" "),n("p",[s._v("call() 方法是预定义的 JavaScript 方法。")]),s._v(" "),n("p",[s._v("它可以用来调用所有者对象作为参数的方法。")]),s._v(" "),n("p",[s._v("通过 call()，您能够使用属于另一个对象的方法。")]),s._v(" "),n("p",[n("strong",[s._v("例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let person = {\n  firstName: 'Diana',\n  lastName: 'Yako',\n  fullName: function() {\n  \treturn this.firstName + lastName;\n  }\n}\nlet person2 = {\n  firstName: '灰之魔女',\n  lastName: '伊蕾娜',\n}\nlet person3 = {\n  firstName: 'Mary',\n  lastName: 'Doe',\n}\nconsole.log(person.fullName());\nconsole.log(person.fullName.call(person1)); // 调用person的fullName方法用于person1\nconsole.log(person.fullName.call(person2)); // 调用person的fullName方法用于person2\n\n控制台：\nDianaYako\n灰之魔女伊蕾娜\nMaryDoe\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("说的简单一点就是")]),s._v(" "),n("p",[s._v("person.fullName的当前this指向的是person本身，所使用的的是person中的firstName和lastName属性（'Diana'和'Yako'）")]),s._v(" "),n("p",[s._v("person.fullName.call(person1)将当前this指向变为了person1，所使用的的是person1中的firstName和lastName属性（‘灰之魔女‘和'伊蕾娜'）")]),s._v(" "),n("p",[s._v("person.fullName.call(person2)将当前this指向变为了person2，所使用的的是person2中的firstName和lastName属性（'Mary'和'Doe'）")]),s._v(" "),n("p",[n("strong",[s._v("call()方法也可以带参数")])]),s._v(" "),n("p",[n("strong",[s._v("例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let person = {\n  fullName: function(city, contry) {\n     return this.firstName + this.lastName + ',' + city + ',' + country;\n  }\n}\nlet person1 = {\n  firstName: 'Diana',\n  lastName: 'Yako'\n}\nperson.fullName.call(person1, 'Tianjin', 'China') // DianaYako,Tianjin,China\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"javascript-apply-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-apply-方法"}},[s._v("#")]),s._v(" JavaScript apply()方法")]),s._v(" "),n("p",[s._v("通过 apply() 方法，您能够编写用于不同对象的方法")]),s._v(" "),n("p",[s._v("apply() 方法与 call() 方法非常相似")]),s._v(" "),n("p",[s._v("在本例中，person 的 fullName 方法被应用到 person1")]),s._v(" "),n("p",[n("strong",[s._v("例子")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let person = {\n  firstName: 'Diana',\n  lastName: 'Yako',\n  fullName: function() {\n  \treturn this.firstName + this.lastName;\n  }\n}\nlet person1 = {\n  firstName: 'Bill',\n  lastName: 'Gates'\n}\nperson.fullName(); // DianaYako\nperson.fullName.apply(person1); // BillGates\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[n("strong",[s._v("call() 和 apply() 之间的区别")])]),s._v(" "),n("p",[s._v("不同之处是：")]),s._v(" "),n("p",[s._v("call() 方法分别接受参数。")]),s._v(" "),n("p",[s._v("apply() 方法接受数组形式的参数。")]),s._v(" "),n("p",[s._v("如果要使用数组而不是参数列表，则 apply() 方法非常方便。")]),s._v(" "),n("p",[n("strong",[s._v("例:")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let person = {\n\tfullName: function(year, month, day, hour, min, second) {\n\t  return this.firstName + this.lastName + ':' + year + '-' + month + '-' + day + ' ' + \t\t\t\t\t\thour + ':' + min + ':' + second;\n\t}\n}\nlet person1 = {\n\tfirstName: 'Diana',\n\tlastName : 'Yako',\n}\nperson.fullName.apply(person1, [2021,2,2,18,13,30]); // DianaYako:2021-2-2 18:13:30\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"javascript-bind-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#javascript-bind-方法"}},[s._v("#")]),s._v(" JavaScript bind()方法")]),s._v(" "),n("p",[s._v("bind()方法与call()几乎一样，但是bind()函数返回的是一个新的函数，必须调用它才会执行")]),s._v(" "),n("p",[n("strong",[s._v("例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let person = {\n  fullName: function() {\n  \treturn this.firstName + this.lastName;\n  }\n}\nlet person1 = {\n\tfirstName: 'Diana',\n\tlastName : 'Yako',\n}\nperson.fullName.bind(person1)(); // DianaYako\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),n("p",[s._v("总体来说，这三个函数都是用来重定义 this  这个对象的，重定义this指向哪里取决于()中第一个元素。他们的第一个参数都是this的指向对象。")]),s._v(" "),n("p",[s._v("他们三个的区别：")]),s._v(" "),n("p",[s._v("call()：除第一个参数外，其他参数以参数来传入，除第一个参数外需要传入4个参数那么在()内共要传入5个参数，其中第一个参数为this指向，其他为向函数传入的参数。 func.call( this, 第一个参数, 第二个参数, ... )")]),s._v(" "),n("p",[s._v("apply()：除第一个参数外，其他参数以数组方式传入。 func.apply( this, [ 第一个参数, 第二个参数, ... ] )")]),s._v(" "),n("p",[s._v("bind():  传参方式与call()完全一致，只是他的返回是函数，需要去调用才会执行函数。 func.bind( this, 第一个参数, 第二个参数, ... )()")]),s._v(" "),n("p",[s._v("当然，三者的参数不限定是 string 类型，允许是各种类型，包括函数 、 object 等等！")])])}),[],!1,null,null,null);a.default=t.exports}}]);